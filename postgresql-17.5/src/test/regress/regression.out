# using postmaster on Unix socket, default port
not ok 1     - test_setup                                706 ms
# parallel group (20 tests, in groups of 1):  boolean char name varchar text int2 int4 int8 oid float4 float8 bit numeric txid uuid enum money rangetypes pg_lsn regproc
ok 2         + boolean                                   174 ms
ok 3         + char                                       24 ms
ok 4         + name                                       88 ms
ok 5         + varchar                                   170 ms
ok 6         + text                                       18 ms
ok 7         + int2                                       18 ms
ok 8         + int4                                       19 ms
ok 9         + int8                                       34 ms
ok 10        + oid                                       560 ms
ok 11        + float4                                   1338 ms
ok 12        + float8                                   1278 ms
ok 13        + bit                                       250 ms
ok 14        + numeric                                  1142 ms
ok 15        + txid                                       26 ms
ok 16        + uuid                                      120 ms
ok 17        + enum                                      455 ms
ok 18        + money                                     136 ms
ok 19        + rangetypes                                965 ms
ok 20        + pg_lsn                                     31 ms
ok 21        + regproc                                    30 ms
# parallel group (20 tests, in groups of 1):  strings md5 numerology point lseg line box path polygon circle date time timetz timestamp timestamptz interval inet macaddr macaddr8 multirangetypes
ok 22        + strings                                   312 ms
ok 23        + md5                                         7 ms
ok 24        + numerology                                111 ms
ok 25        + point                                      29 ms
ok 26        + lseg                                       51 ms
ok 27        + line                                       89 ms
ok 28        + box                                       306 ms
ok 29        + path                                       79 ms
ok 30        + polygon                                   263 ms
ok 31        + circle                                     50 ms
ok 32        + date                                      153 ms
ok 33        + time                                       87 ms
ok 34        + timetz                                     83 ms
ok 35        + timestamp                                 766 ms
ok 36        + timestamptz                               913 ms
ok 37        + interval                                  196 ms
ok 38        + inet                                      211 ms
ok 39        + macaddr                                   137 ms
ok 40        + macaddr8                                  140 ms
ok 41        + multirangetypes                           728 ms
# parallel group (13 tests, in groups of 1):  geometry horology tstypes regex type_sanity opr_sanity misc_sanity comments expressions unicode xid mvcc database
ok 42        + geometry                                   94 ms
ok 43        + horology                                   86 ms
ok 44        + tstypes                                    32 ms
ok 45        + regex                                     219 ms
ok 46        + type_sanity                                83 ms
ok 47        + opr_sanity                                292 ms
ok 48        + misc_sanity                                13 ms
ok 49        + comments                                    7 ms
ok 50        + expressions                                35 ms
ok 51        + unicode                                     9 ms
ok 52        + xid                                        62 ms
ok 53        + mvcc                                       51 ms
ok 54        + database                                 2520 ms
# parallel group (5 tests, in groups of 1):  copy copyselect copydml insert insert_conflict
ok 55        + copy                                      405 ms
ok 56        + copyselect                                161 ms
ok 57        + copydml                                   343 ms
ok 58        + insert                                   2006 ms
ok 59        + insert_conflict                          1083 ms
# parallel group (7 tests, in groups of 1):  create_function_c create_misc create_operator create_procedure create_table create_type create_schema
ok 60        + create_function_c                           6 ms
ok 61        + create_misc                               505 ms
ok 62        + create_operator                            39 ms
ok 63        + create_procedure                          376 ms
ok 64        + create_table                             1489 ms
ok 65        + create_type                               338 ms
ok 66        + create_schema                              74 ms
# parallel group (5 tests, in groups of 1):  create_index create_index_spgist create_view index_including index_including_gist
ok 67        + create_index                             3179 ms
ok 68        + create_index_spgist                       654 ms
ok 69        + create_view                              1335 ms
ok 70        + index_including                           593 ms
ok 71        + index_including_gist                      500 ms
# parallel group (16 tests, in groups of 1):  create_aggregate create_function_sql create_cast constraints triggers select inherit typed_table vacuum drop_if_exists updatable_views roleattributes create_am hash_func errors infinite_recurse
ok 72        + create_aggregate                          289 ms
ok 73        + create_function_sql                       545 ms
ok 74        + create_cast                               110 ms
ok 75        + constraints                              1048 ms
ok 76        + triggers                                 6465 ms
ok 77        + select                                    129 ms
ok 78        + inherit                                  3141 ms
ok 79        + typed_table                               138 ms
ok 80        + vacuum                                   1255 ms
ok 81        + drop_if_exists                            260 ms
ok 82        + updatable_views                          7221 ms
ok 83        + roleattributes                            289 ms
ok 84        + create_am                                 249 ms
ok 85        + hash_func                                  54 ms
ok 86        + errors                                     12 ms
ok 87        + infinite_recurse                           66 ms
ok 88        - sanity_check                              247 ms
# parallel group (20 tests, in groups of 1):  select_into select_distinct select_distinct_on select_implicit select_having subselect union case join aggregates transactions random portals arrays btree_index hash_index update delete namespace prepared_xacts
ok 89        + select_into                               248 ms
ok 90        + select_distinct                           136 ms
ok 91        + select_distinct_on                          9 ms
ok 92        + select_implicit                           129 ms
ok 93        + select_having                              64 ms
ok 94        + subselect                                 550 ms
ok 95        + union                                     249 ms
ok 96        + case                                      139 ms
ok 97        + join                                     1357 ms
ok 98        + aggregates                               1109 ms
ok 99        + transactions                              301 ms
ok 100       + random                                     80 ms
ok 101       + portals                                   163 ms
ok 102       + arrays                                    426 ms
ok 103       + btree_index                              2477 ms
ok 104       + hash_index                               4593 ms
ok 105       + update                                   1532 ms
ok 106       + delete                                     60 ms
ok 107       + namespace                                 148 ms
ok 108       + prepared_xacts                             62 ms
# parallel group (20 tests, in groups of 1):  brin gin gist spgist privileges init_privs security_label collate matview lock replica_identity rowsecurity object_address tablesample groupingsets drop_operator password identity generated join_hash
ok 109       + brin                                      640 ms
ok 110       + gin                                       972 ms
ok 111       + gist                                     1397 ms
ok 112       + spgist                                    847 ms
ok 113       + privileges                               3593 ms
ok 114       + init_privs                                 22 ms
ok 115       + security_label                            112 ms
ok 116       + collate                                   294 ms
ok 117       + matview                                   839 ms
ok 118       + lock                                      240 ms
ok 119       + replica_identity                          333 ms
ok 120       + rowsecurity                              2921 ms
ok 121       + object_address                            242 ms
ok 122       + tablesample                                90 ms
ok 123       + groupingsets                              307 ms
ok 124       + drop_operator                              64 ms
ok 125       + password                                  246 ms
ok 126       + identity                                 1307 ms
ok 127       + generated                                1497 ms
ok 128       + join_hash                                1314 ms
# parallel group (2 tests, in groups of 1):  brin_bloom brin_multi
ok 129       + brin_bloom                                214 ms
ok 130       + brin_multi                               1261 ms
# parallel group (17 tests, in groups of 1):  create_table_like alter_generic alter_operator misc async dbsize merge misc_functions sysviews tsrf tid tidscan tidrangescan collate.utf8 collate.icu.utf8 incremental_sort create_role
ok 131       + create_table_like                         897 ms
ok 132       + alter_generic                             922 ms
ok 133       + alter_operator                            236 ms
ok 134       + misc                                      304 ms
ok 135       + async                                       6 ms
ok 136       + dbsize                                      8 ms
ok 137       + merge                                    1537 ms
ok 138       + misc_functions                            159 ms
ok 139       + sysviews                                   43 ms
ok 140       + tsrf                                       64 ms
ok 141       + tid                                       171 ms
ok 142       + tidscan                                    48 ms
ok 143       + tidrangescan                               61 ms
ok 144       + collate.utf8                               49 ms
ok 145       + collate.icu.utf8                         1405 ms
ok 146       + incremental_sort                          284 ms
ok 147       + create_role                               494 ms
# parallel group (7 tests, in groups of 1):  rules psql psql_crosstab amutils stats_ext collate.linux.utf8 collate.windows.win1252
ok 148       + rules                                    3091 ms
ok 149       + psql                                     1017 ms
ok 150       + psql_crosstab                              57 ms
ok 151       + amutils                                    27 ms
ok 152       + stats_ext                                3466 ms
ok 153       + collate.linux.utf8                          6 ms
ok 154       + collate.windows.win1252                     6 ms
ok 155       - select_parallel                          3375 ms
ok 156       - write_parallel                             78 ms
ok 157       - vacuum_parallel                           943 ms
ok 158       - maintain_every                             92 ms
# parallel group (2 tests, in groups of 1):  publication subscription
ok 159       + publication                              2868 ms
ok 160       + subscription                              416 ms
# parallel group (17 tests, in groups of 1):  select_views portals_p2 foreign_key cluster dependency guc bitmapops combocid tsearch tsdicts foreign_data window xmlmap functional_deps advisory_lock indirect_toast equivclass
ok 161       + select_views                              218 ms
ok 162       + portals_p2                                 12 ms
ok 163       + foreign_key                              5173 ms
ok 164       + cluster                                   998 ms
ok 165       + dependency                                318 ms
ok 166       + guc                                       151 ms
ok 167       + bitmapops                                 389 ms
ok 168       + combocid                                   45 ms
ok 169       + tsearch                                   394 ms
ok 170       + tsdicts                                   183 ms
ok 171       + foreign_data                             2078 ms
ok 172       + window                                    400 ms
ok 173       + xmlmap                                     81 ms
ok 174       + functional_deps                           115 ms
ok 175       + advisory_lock                              15 ms
ok 176       + indirect_toast                            312 ms
ok 177       + equivclass                                317 ms
# parallel group (9 tests, in groups of 1):  json jsonb json_encoding jsonpath jsonpath_encoding jsonb_jsonpath sqljson sqljson_queryfuncs sqljson_jsontable
ok 178       + json                                      250 ms
ok 179       + jsonb                                     638 ms
ok 180       + json_encoding                              13 ms
ok 181       + jsonpath                                   38 ms
ok 182       + jsonpath_encoding                          10 ms
ok 183       + jsonb_jsonpath                            151 ms
ok 184       + sqljson                                   207 ms
ok 185       + sqljson_queryfuncs                        359 ms
ok 186       + sqljson_jsontable                         238 ms
# parallel group (18 tests, in groups of 1):  plancache limit plpgsql copy2 temp domain rangefuncs prepare conversion truncate alter_table sequence polymorphism rowtypes returning largeobject with xml
ok 187       + plancache                                 289 ms
ok 188       + limit                                      80 ms
ok 189       + plpgsql                                  4668 ms
ok 190       + copy2                                     519 ms
ok 191       + temp                                      368 ms
ok 192       + domain                                   1810 ms
ok 193       + rangefuncs                               1116 ms
ok 194       + prepare                                    35 ms
ok 195       + conversion                                222 ms
ok 196       + truncate                                  744 ms
ok 197       + alter_table                             10883 ms
ok 198       + sequence                                  662 ms
ok 199       + polymorphism                              913 ms
ok 200       + rowtypes                                  327 ms
ok 201       + returning                                 172 ms
ok 202       + largeobject                               399 ms
ok 203       + with                                      527 ms
ok 204       + xml                                       111 ms
# parallel group (13 tests, in groups of 1):  partition_join partition_prune reloptions hash_part indexing partition_aggregate partition_info tuplesort explain compression memoize stats predicate
ok 205       + partition_join                           3949 ms
ok 206       + partition_prune                          2396 ms
ok 207       + reloptions                                147 ms
ok 208       + hash_part                                  70 ms
ok 209       + indexing                                 3383 ms
ok 210       + partition_aggregate                      1109 ms
ok 211       + partition_info                            222 ms
ok 212       + tuplesort                                 989 ms
ok 213       + explain                                   122 ms
ok 214       + compression                               287 ms
ok 215       + memoize                                   282 ms
ok 216       + stats                                   10247 ms
ok 217       + predicate                                 121 ms
# parallel group (2 tests, in groups of 1):  oidjoins event_trigger
ok 218       + oidjoins                                  188 ms
ok 219       + event_trigger                            1252 ms
ok 220       - event_trigger_login                        83 ms
ok 221       - fast_default                             1292 ms
ok 222       - tablespace                               2034 ms
1..222
# 1 of 222 tests failed.
# The differences that caused some tests to fail can be viewed in the file "/home/olegg/summer_school_PG/postgresql-17.5/src/test/regress/regression.diffs".
# A copy of the test summary that you see above is saved in the file "/home/olegg/summer_school_PG/postgresql-17.5/src/test/regress/regression.out".
